import discord
from Bot.core.constants import Color, Channel, Role
from Bot.core.buttons import GenericButtonView
from Bot.cogs.verification import nickname_checker
from Bot.core.helper_function import send_log
import asyncio


class NickNameVerificationView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="–ü—Ä–æ–≤–µ—Ä—è—Ç—å", style=discord.ButtonStyle.primary, custom_id="verify_button")
    async def verify_button(self, interaction: discord.Interaction, button: discord.ui.Button):

        await send_log(
            title=f"{interaction.user.name} logs",
            description=f"{interaction.user.name} has requested to verify their nickname.",
            color= discord.Color.from_str(Color.brand_color),
            guild= interaction.guild
        )
        await interaction.response.defer()
        thread = await interaction.channel.create_thread(name=f"Application {interaction.user.name}", type= discord.ChannelType.private_thread)
        await thread.add_user(interaction.user)

        rules_embed = discord.Embed(
            title="–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞",
            description="–ü—Ä–æ–π–¥–∏—Ç–µ –Ω–∏–∂–µ –ø–æ —Å—Å—ã–ª–∫–µ , –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —á—Ç–æ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏.",
            color= discord.Color.from_str(Color.brand_color)
        )
        rules_embed.add_field(
            name="–ü—Ä–∞–≤–∏–ª–∞",
            value="[–ü—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞](https://docs.google.com/document/d/14Z4TwIAko0WGgaxHwMIcRpHK_I37iKA6cYp-9Uj-0FE/edit?tab=t.0)"
        )

        buttons = [
            {"label": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å", "emoji": "‚úÖ", "style": discord.ButtonStyle.primary, "callback": self.confirm_rules_click, "custom_id": "confirm_rules_click"},
            {"label": "–û—Ç–∫–ª–æ–Ω–∏—Ç—å", "emoji": "‚ùå", "style": discord.ButtonStyle.danger, "callback": self.decline_rules_click, "custom_id": "decline_rules_click"}
        ]
        view = GenericButtonView(buttons=buttons)
        await thread.send("–ü—Ä–∏–≤–µ—Ç , –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –≤–∞–º–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ .", embed=rules_embed, view= view)
    
    async def confirm_rules_click(self, interaction: discord.Interaction):

        await send_log(
            title=f"{interaction.user.name} logs",
            description=f"{interaction.user.name} has agree to that rules",
            color= discord.Color.from_str(Color.brand_color),
            guild= interaction.guild
        )

        age_embed = discord.Embed(
            title="–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ +18",
            description="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —á—Ç–æ –≤–∞–º +18",
            color= discord.Color.from_str(Color.brand_color)
        )
        buttons = [
            {"label": "–î–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é", "emoji": "‚úÖ", "style": discord.ButtonStyle.success, "callback": self.on_yes_click, "custom_id": "yes_button"},
            {"label": "–ù–µ—Ç", "emoji": "‚ùå", "style": discord.ButtonStyle.danger, "callback": self.on_no_click, "custom_id": "no_button"}
        ]
        view = GenericButtonView(buttons=buttons)
        await interaction.response.send_message(embed=age_embed, view= view)


    async def decline_rules_click(self, interaction: discord.Interaction):

        await send_log(
            title=f"{interaction.user.name} logs",
            description=f"{interaction.user.name} has disagree to that rules",
            color= discord.Color.from_str(Color.brand_color),
            guild= interaction.guild
        )

        await interaction.response.send_message("–í—ã –æ—Ç–∫–ª–æ–Ω—è–µ—Ç–µ –ø—Ä–∞–≤–∏–ª–∞! –ö–∞–Ω–∞–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥", ephemeral=True)
        await asyncio.sleep(5)
        await interaction.channel.delete()



    async def on_yes_click(self, interaction: discord.Interaction):
        await interaction.response.send_modal(EnterNickNameModal())
        await send_log(
            title=f"{interaction.user.name} logs",
            description=f"{interaction.user.name} has agreed to be 18+",
            color= discord.Color.from_str(Color.brand_color),
            guild= interaction.guild
        )
        await interaction.followup.send("–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —á—Ç–æ –≤–∞–º –µ—Å—Ç—å +18 .")
        

    async def on_no_click(self, interaction: discord.Interaction, ):
        await interaction.response.send_message("–í—ã –Ω–∞–∂–∞–ª–∏ ¬´–ù–µ—Ç¬ª!", ephemeral=True)
        await send_log(
            title=f"{interaction.user.name} logs",
            description=f"‚ùå {interaction.user.name} has disagreed to be 18+",
            color= discord.Color.from_str(Color.brand_color),
            guild= interaction.guild
        )
        await asyncio.sleep(5)
        await interaction.channel.delete()


class EnterNickNameModal(discord.ui.Modal, title="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–≥—Ä–æ–≤–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é"):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        
        # Define the TextInput inside __init__ to prevent duplicate IDs
        self.nickname_field = discord.ui.TextInput(
            label="–ò–º—è –§–∞–º–∏–ª–∏—è –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",  
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–≥—Ä–æ–≤–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é.", 
            min_length=3, 
            max_length=20, 
            required=True,
            custom_id="nickname_input"  # Ensure a unique custom_id
        )

        self.add_item(self.nickname_field)

    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer()
        guild = interaction.guild
        member = guild.get_member(interaction.user.id)

        await send_log(
            title=f"{interaction.user.name} logs",
            description= f"{interaction.user.name} has submitted the nickname {self.nickname_field.value}",
            color= discord.Color.from_str(Color.brand_color),
            guild= interaction.guild
        )
        

        if nickname_checker.is_nick_name_valid(self.nickname_field.value):    
            await member.edit(nick=self.nickname_field.value)

            role = guild.get_role(Role.verified)

            if role and role not in member.roles:
                await interaction.followup.send(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é üéâ, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Å–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π —ç—Ç–∞–ø –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ . –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {self.nickname_field.value} {role.name} . –°–ø–∞—Å–∏–±–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ Frontier Role Play.")
                await asyncio.sleep(5)
                await member.add_roles(role)
            
            else:
                await interaction.followup.send(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é üéâ, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Å–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π —ç—Ç–∞–ø –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ . –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {self.nickname_field.value} {role.name} . –°–ø–∞—Å–∏–±–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ Frontier Role Play.")

            await send_log(
                title=f"{interaction.user.name} logs",
                description= f"‚úÖ Nickname set to `{self.nickname_field.value}` and role **{role.name}** assigned!",
                color= discord.Color.from_str(Color.brand_color),
                guild= interaction.guild
            )

            await asyncio.sleep(2)
            await interaction.channel.delete()
        else:
            nickname =  nickname_checker.suggest_valid_nickname(self.nickname_field.value)

            await send_log(
                title=f"{interaction.user.name} logs",
                description= f"‚ùå Nickname Inavlid and suggested {nickname}",
                color= discord.Color.from_str(Color.brand_color),
                guild= interaction.guild
            )

            embed = discord.Embed(
                title="–í–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º.",
                description=f"",
                color= discord.Color.from_str(Color.brand_color)
            )
            embed.add_field(
                name="** **", value= "1. –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π.", inline=False
            )
            embed.add_field(
                name="** **", 
                value="2. –í –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–∞ –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞, –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–∏—Å–∞—Ç—å –∫–∞–ø—Å–æ–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: John Smith, –Ω–æ –Ω–µ JOHN SMITH).",inline=False
            )
            embed.add_field(
                name= "3. NonRP –∏–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã, –≤–∫–ª—é—á–∞—è:",
                value="""
>>> –ò–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π (–∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π, –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–∑ —Ñ–∏–ª—å–º–æ–≤, –∏–≥—Ä –∏–ª–∏ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤).
–ò–º–µ–Ω–∞ —Å –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏–ª–∏ –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –ª–µ–∫—Å–∏–∫–æ–π.
–£–º–µ–Ω—å—à–∏—Ç–µ–ª—å–Ω–æ-–ª–∞—Å–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏–ª–∏ —Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, Jonny –≤–º–µ—Å—Ç–æ John).
""", inline=False
            )
            embed.add_field(name="** **", value="4. –ò–º–µ–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–∑ –†–æ—Å—Å–∏–∏, –°–ù–ì –∏–ª–∏ –ø–æ—Å—Ç—Å–æ–≤–µ—Ç—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω –∑–∞–ø—Ä–µ—â–µ–Ω—ã.", inline=False)
            embed.add_field(name="** **", value="5. –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º —Ä–µ–∞–ª–∏—è–º –î–∏–∫–æ–≥–æ –ó–∞–ø–∞–¥–∞ XIX –≤–µ–∫–∞.", inline=False)
            embed.add_field(name="–ü—Ä–µ–¥–ª–∞–≥–∞—é —Å–ª–µ–¥—É—é—â–µ–µ", value= nickname)


            buttons = [
                {"label": "–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–Ω–æ–≤–æ", "emoji": "üîÉ", "style": discord.ButtonStyle.primary, "callback": self.resubmit_nickname, "custom_id": "submit_button"}

            ]
            view = GenericButtonView(
                buttons= buttons
            )

            await interaction.followup.send(embed=embed, view= view)

    async def resubmit_nickname(self, interaction: discord.Interaction):
        guild = interaction.guild
        await interaction.response.send_modal(EnterNickNameModal())
        